{"version":3,"file":"static/js/307.d84a1e0b.chunk.js","mappings":"+RAGMA,GAASC,EAAAA,EAAAA,IAAH,sFASCC,EAAQC,EAAAA,GAAAA,GAAH,2JASLC,EAAYD,EAAAA,GAAAA,IAAH,mMAWTE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8QAULH,GAGFO,EAAQJ,EAAAA,GAAAA,MAAH,wGAOLK,EAAOL,EAAAA,GAAAA,KAAH,wJAUJM,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,mVAmBLQ,EAAmBR,EAAAA,GAAAA,EAAH,yGAQhBS,EAAeT,EAAAA,GAAAA,OAAH,mb,SCxEnBU,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,GAAaC,EAAAA,EAAAA,IAAO,CACxBH,OAAOI,EAAAA,EAAAA,MAASJ,MAAM,iBAAiBK,SAAS,qBAChDJ,UAAUG,EAAAA,EAAAA,MAASC,SAAS,0BAmD9B,EAhDkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAACjB,EAAD,WACE,SAAC,KAAD,CACES,cAAeA,EACfS,SATe,SAAC,EAAD,GAAyC,IAAtCR,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcQ,EAAgB,EAAhBA,UAC3CH,GAASI,EAAAA,EAAAA,IAAM,CAAEV,MAAAA,EAAOC,SAAAA,KACxBQ,GACD,EAOKE,iBAAkBT,EAHpB,UAKE,UAACX,EAAD,CAASqB,aAAa,MAAtB,WACE,SAACxB,EAAD,6BACA,UAACK,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,CAAQmB,KAAM,KADhB,YAIA,SAAClB,EAAD,CACEmB,YAAY,kCACZC,KAAK,OACLC,KAAK,WAEP,SAAC,KAAD,CAAcC,UAAWpB,EAAkBmB,KAAK,cAElD,UAACvB,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,CAAoBmB,KAAM,KAD5B,eAIA,SAAClB,EAAD,CACEmB,YAAY,6BACZC,KAAK,WACLC,KAAK,cAEP,SAAC,KAAD,CAAcC,UAAWpB,EAAkBmB,KAAK,iBAElD,SAAClB,EAAD,CAAciB,KAAK,SAAnB,0BAKT,E,UCvEOG,EAAWC,EAAQ,MAAnBD,OAiBR,EAfc,WACZ,IAAQE,GAAcC,EAAAA,EAAAA,MAAdD,UACAE,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,iCACE,SAACJ,EAAD,WACE,uCAEDE,IAAa,SAACE,EAAD,KACd,SAAC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled, { keyframes } from 'styled-components';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: block;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n  font-size: 30px;\n  color: #000;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  padding: 20px;\n\n  border-radius: 15px;\n  background: #e3e3e3;\n  box-shadow: 16px 16px 32px #c8c8c8, -16px -16px 32px #fefefe;\n  animation: ${fadeIn} 0.5s ease;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 0;\n  width: 100%;\n`;\n\nexport const Text = styled.span`\n  display: flex;\n  gap: 5px;\n  align-items: end;\n  justify-content: center;\n  margin-bottom: 10px;\n\n  font-size: 1.2rem;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 10px;\n\n  border: none;\n  border-radius: 10px;\n  font-size: 1.2rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: box-shadow 0.2s ease;\n\n  &::placeholder {\n    font-size: 15px;\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.8);\n  }\n`;\n\nexport const ErrorMessageText = styled.p`\n  text-align: center;\n  margin-top: 10px;\n\n  color: red;\n  font-size: 17px;\n`;\n\nexport const SubmitButton = styled.button`\n  width: 50%;\n  height: 45px;\n  margin-top: 10px;\n  cursor: pointer;\n\n  font-size: 20px;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  border: 2px solid #000;\n  background-color: transparent;\n  border-radius: 5px;\n  transition: 0.5s;\n  &:hover {\n    background-color: rgb(0, 0, 0);\n    color: white;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0);\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { ErrorMessage, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { FiMail } from 'react-icons/fi';\nimport { RiLockPasswordFill } from 'react-icons/ri';\nimport {\n  ErrorMessageText,\n  Container,\n  Label,\n  Text,\n  Input,\n  FormBox,\n  SubmitButton,\n  Title,\n} from './LoginForm.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst userSchema = object({\n  email: string().email('Invalid email').required('Email is required'),\n  password: string().required('Password is required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={userSchema}\n      >\n        <FormBox autoComplete=\"off\">\n          <Title>Authorization</Title>\n          <Label>\n            <Text>\n              <FiMail size={20} />\n              Email\n            </Text>\n            <Input\n              placeholder=\"Please enter your email address\"\n              type=\"text\"\n              name=\"email\"\n            />\n            <ErrorMessage component={ErrorMessageText} name=\"email\" />\n          </Label>\n          <Label>\n            <Text>\n              <RiLockPasswordFill size={20} />\n              Password\n            </Text>\n            <Input\n              placeholder=\"Please enter your password\"\n              type=\"password\"\n              name=\"password\"\n            />\n            <ErrorMessage component={ErrorMessageText} name=\"password\" />\n          </Label>\n          <SubmitButton type=\"submit\">Log In</SubmitButton>\n        </FormBox>\n      </Formik>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\nimport { useAuth, useLoaders } from 'hooks';\nconst { Helmet } = require('react-helmet');\n\nconst Login = () => {\n  const { isLoading } = useAuth();\n  const { LoaderBig } = useLoaders();\n\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      {isLoading && <LoaderBig />}\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["fadeIn","keyframes","Title","styled","Container","FormBox","Form","Label","Text","Input","Field","ErrorMessageText","SubmitButton","initialValues","email","password","userSchema","object","string","required","dispatch","useDispatch","onSubmit","resetForm","logIn","validationSchema","autoComplete","size","placeholder","type","name","component","Helmet","require","isLoading","useAuth","LoaderBig","useLoaders"],"sourceRoot":""}